apply plugin: 'kotlin'
apply plugin: 'idea'

configurations {
    provided
}

sourceSets {
    main.compileClasspath += configurations.provided
}

idea {
    module {
        scopes.PROVIDED.plus += [configurations.provided]
    }
}

sourceCompatibility = JavaVersion.VERSION_1_7
targetCompatibility = JavaVersion.VERSION_1_7

task createClasspathManifest {
    def outputDir = file("$buildDir/$name")

    inputs.files sourceSets.main.runtimeClasspath
    outputs.dir outputDir

    doLast {
        outputDir.mkdirs()
        file("$outputDir/plugin-classpath.txt").text = sourceSets.main.runtimeClasspath.join("\n")
    }
}

task pluginVersion {
    def outputDir = file("src/version/kotlin")

    inputs.property 'version', version
    outputs.dir outputDir

    doLast {
        def versionFile = file("$outputDir/org/michaelevans/aftermath/gradle/Version.kt")
        versionFile.parentFile.mkdirs()
        versionFile.text = """// Generated file. Do not edit!
package org.michaelevans.aftermath.gradle

internal val VERSION = "${project.version}"
"""
    }
}

tasks.getByName('compileKotlin').dependsOn('pluginVersion')
dependencies {
    provided gradleApi()
    compile project(":aftermath-processor")
    compile "com.android.tools.build:gradle:2.0.0-beta6"
    compile "com.neenbedankt.gradle.plugins:android-apt:1.8"
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile "org.jetbrains.kotlin:kotlin-stdlib:$rootProject.ext.kotlinVersion"
    compile 'com.squareup:javapoet:1.5.1'

    testCompile gradleTestKit()
    testCompile 'junit:junit:4.12'
    testCompile 'com.google.truth:truth:0.28'
    testRuntime files(createClasspathManifest)
}

sourceSets.all { it.java.srcDirs += "src/${it.name}/kotlin" }
